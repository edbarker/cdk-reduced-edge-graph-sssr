Notes for development of reduced edge graph sssr

Here are some initial notes and thoughts. 

In general the approach has a number of stages and due to the nature of most typical drug-like molecules (the kind I'm interested in) most (96%) can be solved at the end of stage two. This is because it favours molecules with either single rings separated by acyclic chains and/or simple ring systems - arranged linearly.

I call the approach the reduced edge graph because it is a reduced graph and also an edge graph. That is nodes in the graph represent multiple nodes in the original chemical graph, and an edge graph because the edges in the graph are actually nodes in the original graph. 

There are four stages.

Stage one

1. All terminal branches are pruned away leaving just the rings and their acyclic connectors.
2. An edge is selected to be cut. The selection of this edge is based on finding the least connected atom using a connectivity index adapted from that described by zamora. This step improves the chances of solving the molecule in stage one, and gives an improvement in efficiency.
3. When the edge is cut all terminal branches are deleted and the entire substructure that has been removed is reconnected as it was in the original graph and represented as a single node which is added to the reduced edge graph.
4. Nodes which contain cycles are identified and the cycles retrieved.
5. Steps 2 to 4 continue until nothing remains of the molecule.
6. If all rings have been found then it ends.

Stage two

1. Find a linear fragment, Fragment 1, which has its terminal atoms both contained within another fragment, Fragment 2.
2. The shortest path between these two linking atoms is found in Fragment 2 is found.
3. The shortest path in Fragment 2 is combined with Fragment 1 to give a cycle. Fragment 1 is labelled as solved. This stops it from being considered later. It is a feature of this that all cycles not found at stage one must have a linear fragment associated with it. However not all linear fragments give rise to cycles.
4. It is possible that the ring just found can be a part of a previously found cycle. To check this the newly created cycle is compared with all cycles previously found. If it shares any bonds then we find all bonds in common and all bonds exclusive to the new cycle. If the number of bonds exclusive to the new cycle is less than the number in common then splitting occurs. The larger cycle is split by removing the new ring and adding what's left to the linear fragment. 
5. It is also necessary to test the rings found against those previously found to check they are unique. If not then they are discarded.
6. If all rings have not been found then steps 1 to 5 are repeated until all linear fragments have been tested.
7. If all rings have been found then it ends.

Stage three

1. Rings remaining to be found are more copmplex and made up of rings of three or more nodes in the reduced edge graph. The easiest way to solve these is to find each linear fragment and remove all the bonds found in this fragment from the original molecule.
2. Then the shortest path between the two linking atoms is found.
3. The shortest path is added to the fragment removed to make up a new ring.
4. The ring is checked for splitting.
5. The ring is checked for uniqueness.
6. If all rings have not been found then steps 1 to 5 are repeated until all linear fragments have been tested.
7. If all rings have been found then it ends.

Stage four

1. The reduced edge graph is constructed by connecting all nodes with edges where atoms are shared between the fragment represented by a node.
2. The CDK SSSRFinder finds all rings in the reduced edge graph.
3. Each ring is reconstructed by taking each node in the found cycle and finding the shortest path through the representative fragment which links the linker atoms en route. These shortest paths are added together to give a ring.
4. The ring is checked for splitting.
5. The ring is checked for uniqueness.
6. If all rings have not been found then steps 3 to 5 are repeated until all linear fragments have been tested.
7. All rings are found by the end of this stage.

This shows a typical fragmentation for a molecule solved in stages 1 and 2:
 
o-o-o-o     o-o-o
    | |     | | |
    o-o-o-o-o-o-o-o		Chemical graph

 
    o-o     o-o-o
    | |     | | |
    o-o-o-o-o-o-o		After deleting terminal branches

 
    o-o     o-o-o
      |     | | |
    o-o-o-o-o-o-o		Bond is cut

 
            o-o-o					o-o
            | | |					| |
            o-o-o		Fragment removed = A    o-o-o-o-o-


            o-o-o
              | |
	    o-o-o		Bond is cut 

 
              o-o					o-o-
              | |					| 
              o-o		Fragment removed = B    o-o-

              o-o
              | 
	      o-o		Bond is cut 

                 					o-o
                 					| |
                 		Fragment removed = C    o-o


Fragments A and C are easily resolved into cycles. Fragment B is resolved by finding shortest path between connectors in Fragment C. 

In theory all rings should be found by now, - that is in the NCI dataset at least. I am assuming that there is nothing out there which fails this - which is a big assumption. Interestingly only 46 molecules reaches stage 4. 

Here are the figures for the numbers of molecules solved at which stage:
For 250251 molecules in the NCI dataset.

Stage 0 - 21964   = 21964	= 8.8% 	[these are acyclic structures]
Stage 1 - 128598  = 150562	= 60.2%
Stage 2 - 110178  = 238776 	= 95.4%
Stage 3 - 11429	  = 250205	= 99.9%
Stage 4 - 45	  = 250251	= 100%

I did a time trial using the NCI dataset of 250251 molecules in smiles format. Times shown are times taken less the time taken to do the background processing of reading in the smiles (1002s).

CDK SSSRFinder alone 				- 1379s - 1002s = 377s = 663 molecules processed per second.
New algorithm					- 1119s - 1002s = 117s = 2275 mols/s
New algorithm - stages 1 and 2 + CDK SSSRFinder - 1127s - 1002s = 125s = 2002 mols/s

So clearly the new method is faster than the original sssr method. The first two stages are very fast - linear time I think. The last few stages are probably about as fast as doing the cdk sssr to find the rings for those not found in the first two stages. So it is difficult to suggest which is better - it could be safer to use stages one and two as a preprocessing step prior to the sssr because I am confident any molecule solved here is correct. However, I'm not confident that there are not molecules which will fail for the latter stages, although I haven't found one in millions of molecules tested. To be on the safe side I suggest using it as a pre-processing step to speed up the cdk's sssr.

Also the extra time taken to find the least connected atom is worth it as more molecules are solved at stage 1. With this step 239865 molecules are solved at stage 1 (amazingly this is 95.8%! of the dataset, with only 10486 unsolved) whereas without this step only 219757 molecules are solved in stage 1 (30594 unsolved).




